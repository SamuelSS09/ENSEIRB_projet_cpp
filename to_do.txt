-L'interet de faire un attribut static pour id?

- A FAIRE:
	- traiter des stoi (catch expection)
	- changer les to_string par un autre nome puisque il existe déjà std::to_string()
	- places les constants et fonctions Helpers dans un seul fichier
	- Check pour medias dupliqués sur la classe Library (methode load_media())
	- determiner quels methodes seront privées
	- faire un namespace avec des constants et des fonctions outils
	- verifier les destructeurs
	- peut-etre que sera mieux faire la MediaInterface, et la mettre dans la classe Librairie. Dans ce cas, les methodes de gestion du MainController serions des methodes de la Librairie

	- retirer les elements dupliqués sur le vecteur après le SEARCH :https://www.techiedelight.com/remove-duplicates-vector-cpp/

	-- changer les stoi par <boost/lexical_cast.hpp>https://www.techiedelight.com/convert-string-to-int-cpp/ , puisque celle si ne convert pas des string du type 10dsasa . par example: stoi("10sxc") = 10, ce qui n'est pas bon

	-- verifier si c'est un bonne idée de faire le class_index être un attribut des classes.

QUESTIONS:

-Library::write_media() n'est pas utilisée? 
Rep: oui, dans le cas SAVE du MainControllre

-le role des fonctions read_users et write_users? 
REP: ecrire/lire les utilsateurs dans/du fichier

-Après BYE, le compteur de users est remis à zero, d'où id n'est pas bien determiné. 
Rep: Pas grave, puisque toujours que le programme demarre, il va lire les fichiers, et du coup le premier valeur de nextId sera (1 + l'id plus grand qu'il trouve dans les fichiers) 


A faire:

-bool sur MainController pour les droits des utilisateurs
-bool sur interface pour afficher les commandes de chaque utilisateurs
-une seule methode validate_login() du user
